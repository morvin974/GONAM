<?php if ( ! defined('BASEPATH')) exit('No direct script access allowed');/** * PDO library * @version 1.0 */ class Pdodb {		// PDO instance	private $_pdo;		// Current database	private $currentDB;		// Constructor	public function __construct() {		$this->_pdo = NULL;		$this->currentDB = '';	}		// ------------------------------------------		/**	 * loadPDO	 * This function allow to load PDO Object and connect to a database with	 * the information specified in config file ./system/configs/database.php.	 *	 * @param string $db	 *		Database in config file (optional)	 *	 * @return object - or - NULL	 */	public function &loadPDO($db = 'default') {		// If we are already connected, we return pdo object		if ($this->currentDB === $db && $this->_pdo !== NULL) {			return $this->_pdo;		}					// Else we connect at the database		$FW =& getInstance();		$FW->config->load('database');				$info = $FW->config->get('db');				// In configuration file is ok		if ($info !== '' && is_array($info)) {			// If database configuration is ok			if (isset($info[$db]) && isset($info[$db]['dbms']) 			&& isset($info[$db]['host']) && isset($info[$db]['db']) 			&& isset($info[$db]['user']) && isset($info[$db]['pwd'])) {				// If debug mode is on we print connection error(s)				try {					$this->_pdo = new PDO("{$info[$db]['dbms']}:host={$info[$db]['host']};dbname={$info[$db]['db']}", $info[$db]['user'], $info[$db]['pwd']);					$this->_pdo->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);					$this->_pdo->query("set names UTF8");					$this->currentDB = $db;				}				catch (PDOException $e) {					if ($FW->config->get('debug') === TRUE)						showError($e->getMessage());				}			}			else {				showError('Database ' . htmlentities($db) . ' doesn\'t exists or isn\'t correct in configuration file.');			}		}		else {			showError('Database configuration file isn\'t correct. Please check the manual.');		}				return $this->_pdo;	}		// ------------------------------------------		// Destruct	public function __destruct() {		// Normally, pdo close automaticaly connection at the end of execution but ...		$this->_pdo = NULL;	}	}/* End of file Pdodb.php *//* Location : ./system/libraries/Pdodb.php */